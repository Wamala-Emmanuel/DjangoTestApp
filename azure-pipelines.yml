trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

variables:
  DOCKERHUB_ID: 'wamy1738'
  IMAGE_NAME: 'odt-trial'
  IMAGE_TAG: '1.0'
  TRIVY_VERSION: 'v0.44.1'

stages:
  - stage: Build
    displayName: Build, Test & Push to DockerHub
    jobs:
      - job: Build_Image
        displayName: Run tests, build & push
        steps:
        - task: dependency-check-build-task@6
          displayName: Run a SCA scan (OWASP Dependency Check)
          continueOnError: true
          inputs:
            projectName: 'odt-sca'
            scanPath: $(System.DefaultWorkingDirectory)
            format: 'JUNIT'
            failOnCVSS: 10 
            
        - task: PublishTestResults@2
          displayName: Publish SCA scan report
          continueOnError: true
          inputs:
            testResultsFormat: 'JUNIT'
            testResultsFiles: '**/dependency-check-junit.xml'
            testRunTitle: 'odt-sca'
            searchFolder: $(Common.TestResultsDirectory)
            publishRunAttachments: false

        # - task: SonarQubePrepare@5
        #   continueOnError: true
        #   inputs:
        #     SonarQube: 'YourSonarqubeServerEndpoint'
        #     scannerMode: 'MSBuild'
        #     projectKey: 'YourProjectKey'

        # - task: SonarQubeAnalyze@5

        # - task: SonarQubePublish@5
        #   inputs:
        #     pollingTimeoutSec: '300'

        - task: Docker@2
          displayName: Build docker image
          inputs:
            repository: $(DOCKERHUB_ID)/$(IMAGE_NAME)
            command: 'build'
            Dockerfile: '**/.Dockerfile'
            tags: |
              $(IMAGE_TAG)
              latest

        - task: trivy@1
          displayName: Run a SAST scan (Trivy)
          inputs:
            version: $(TRIVY_VERSION)
            docker: false
            image: $(DOCKERHUB_ID)/$(IMAGE_NAME):$(IMAGE_TAG)
            severities: 'CRITICAL,HIGH,MEDIUM,LOW,UNKNOWN'
            options: --scanners vuln

        - task: Docker@2
          displayName: Push image to DockerHub
          inputs:
            containerRegistry: 'DockerHubConnection'
            repository: $(DOCKERHUB_ID)/$(IMAGE_NAME)
            command: 'push'
            tags: |
              $(IMAGE_TAG)
              latest

